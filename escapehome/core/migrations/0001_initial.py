# Generated by Django 2.1.5 on 2019-07-17 11:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('function', models.CharField(max_length=255)),
                ('parameters', models.TextField(blank=True, help_text='als dict', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ActiveScenario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(blank=True, max_length=255, null=True)),
                ('players', models.IntegerField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('score', models.IntegerField(default=0)),
                ('state', models.IntegerField(blank=True, null=True)),
                ('box', models.BooleanField(blank=True, default=False, help_text='"true": box ist offen, "false": box ist geschlossen', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Command',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('protocol', models.CharField(choices=[('KNX', 'knx'), ('PHue', 'philips hue'), ('Modbus', 'modbus')], max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='OrderedAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField()),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.Action')),
                ('command', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.Command')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='OrderedRiddle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField()),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Riddle',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('task', models.TextField()),
                ('solution', models.TextField()),
                ('points', models.IntegerField()),
                ('loop', models.IntegerField(default=99, help_text='0 (only once) - 99 (infinity)')),
                ('hints', models.TextField(blank=True)),
                ('correct', models.TextField(blank=True, default='Grandios, dass war richtig.')),
                ('incorrect', models.TextField(blank=True, default='Schade, dass war leider falsch, versuch es doch nochmal.')),
                ('commands', models.ManyToManyField(blank=True, related_name='riddle', to='core.Command')),
            ],
            options={
                'verbose_name_plural': 'Riddles',
            },
        ),
        migrations.CreateModel(
            name='Scenario',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('other_names', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True)),
                ('severity', models.CharField(blank=True, choices=[('EASY', 'Leicht'), ('MEDIUM', 'Mittel'), ('DIFFICULT', 'Schwer')], default='MEDIUM', max_length=255)),
                ('length', models.DurationField(blank=True, null=True)),
                ('riddles', models.ManyToManyField(blank=True, related_name='scenario', through='core.OrderedRiddle', to='core.Riddle')),
            ],
            options={
                'verbose_name_plural': 'Scenarios',
            },
        ),
        migrations.CreateModel(
            name='HueLamp',
            fields=[
                ('device_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Device')),
                ('lamp_id', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('room', models.CharField(blank=True, max_length=255)),
            ],
            bases=('core.device',),
        ),
        migrations.CreateModel(
            name='HueRemoteControl',
            fields=[
                ('device_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Device')),
                ('control_id', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
            ],
            bases=('core.device',),
        ),
        migrations.CreateModel(
            name='KNXLamp',
            fields=[
                ('device_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Device')),
                ('group_adddress', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
            ],
            bases=('core.device',),
        ),
        migrations.CreateModel(
            name='KNXShutter',
            fields=[
                ('device_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Device')),
                ('group_adddress', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('modus', models.CharField(max_length=255)),
            ],
            bases=('core.device',),
        ),
        migrations.CreateModel(
            name='ModbusMotor',
            fields=[
                ('device_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Device')),
                ('device_address', models.IntegerField()),
            ],
            bases=('core.device',),
        ),
        migrations.AddField(
            model_name='orderedriddle',
            name='riddle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.Riddle'),
        ),
        migrations.AddField(
            model_name='orderedriddle',
            name='scenario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.Scenario'),
        ),
        migrations.AddField(
            model_name='command',
            name='actions',
            field=models.ManyToManyField(blank=True, related_name='command', through='core.OrderedAction', to='core.Action'),
        ),
        migrations.AddField(
            model_name='command',
            name='devices',
            field=models.ManyToManyField(blank=True, related_name='command', to='core.Device'),
        ),
        migrations.AddField(
            model_name='activescenario',
            name='riddle',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='active_riddles', to='core.Riddle'),
        ),
        migrations.AddField(
            model_name='activescenario',
            name='scenario',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='active_scenarios', to='core.Scenario'),
        ),
    ]
